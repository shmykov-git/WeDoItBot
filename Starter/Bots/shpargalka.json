{
  "Rooms": [
    {
      "Id": "start",
      "AutoGo": "service"
    },
    {
      "Id": "service",
      "List": "Выберите вопрос",
      "Items": [
        {
          "Button": "Что такое SOLID?",
          "Go": "solid"
        },
        {
          "Button": "Что такое IoC?",
          "Go": "IoC"
        }
      ]
    },
    {
      "Id": "solid",
      "List": "Это набор принципов разработки ПО",
      "Items": [
        {
          "Button": "S",
          "Go": "solid_s"
        },
        {
          "Button": "O",
          "Go": "solid_o"
        },
        {
          "Button": "L",
          "Go": "solid_l"
        },
        {
          "Button": "I",
          "Go": "solid_i"
        },
        {
          "Button": "D",
          "Go": "solid_d"
        },
        {
          "Button": "..",
          "Go": "service"
        }
      ],
      "ColumnsCount": "6" 
    },
    {
      "Id": "solid_s",
      "Say": "Single responsibility",
      "Go": "solid"
    },
    {
      "Id": "solid_o",
      "Say": "Open–closed",
      "Go": "solid"
    },
    {
      "Id": "solid_l",
      "Say": "Liskov substitution",
      "Go": "solid"
    },
    {
      "Id": "solid_i",
      "Say": "Interface segregation",
      "Go": "solid"
    },
    {
      "Id": "solid_d",
      "Say": "Dependency inversion",
      "Go": "solid"
    },
    {
      "Id": "IoC",
      "List": "Это принцип инверсии управления. Делегирование контроля выполнения кода отдельному фреймворку",
      "Items": [
        {
          "Button": "Табличка",
          "Go": "IoC_table"
        },
        {
          "Button": "Разъясняющий пример",
          "Go": "IoC_text"
        },
        {
          "Button": "..",
          "Go": "service"
        }
      ]
    },
    {
      "Id": "IoC_table",
      "Say": "",
      "Go": "IoC"
    },
    {
      "Id": "IoC_text",
      "Say": "- Как бы нам сделать инверсию зависимостей?\n- А давайте сделаем инверсию управления.\n- А как?\n- Сделаем сервис, который сам будет создавать все объекты так, как ему нужно и будет их вставлять в каждую сущность, которая этого требует.\n- Так это получается инжекция зависимостей что ли?\n- Точно! Сервис инжектирует зависимости самостоятельно!\n- Погодите, но мы же делаем инверсию зависимостей?\n- Да!! Как только мы станем инжектить зависимости, то пропадёт зависимость от базовых сущностей в верхних модулях, это и называется инверсией зависимостей!",
      "Go": "IoC"
    }
  ]
}